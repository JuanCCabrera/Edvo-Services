create table institution(institutionID varchar(10) primary key not null unique, name varchar(40), location varchar(50), schoolType varchar(15), accounts smallint, accountsused smallint);
create table users(userID text primary key unique not null, institutionID varchar(10) references institution(institutionID), userType varchar(12),  name varchar(30), lastname varchar(30), gender varchar(8), email varchar(50), password varchar(20), DOB date, memberSince timestamp, policies boolean);
create table user_info(userID text primary key references users(userID), teacherSince date, education varchar(30),  english boolean, spanish boolean, strategies boolean, material boolean, timeManagement boolean, tech boolean, instructions boolean);
create table school_info(userID text primary key references users(userID), name varchar(40), location varchar(50),  schoolType varchar(15),  moodle boolean, googleClassroom boolean, emails boolean, books boolean, applications boolean, socialMedia boolean, projector boolean, computer boolean, tablet  boolean, stylus  boolean, internet boolean, smartboard boolean, smartpencil boolean, speakers boolean);
create table class_info(userID text references users(userID), classInfoID serial not null unique, subject varchar(20), format varchar(10), language varchar(8), level varchar(25), groupsize varchar(7), topicA varchar(20), topicB varchar(20), topicC varchar(20), primary key (userID, classInfoID));
create table coupons(couponID varchar(10) primary key not null unique, name varchar(20));
create table coupons_used(couponID varchar(10) not null references coupons(couponID), userID text references users(userID) not null, dateUsed timestamp, primary key (userID, couponID));
create table appointment(appointmentID serial primary key unique not null, userID text references users(userID), mentorID text references users(userID), date timestamp);
create table questions(askedDate timestamp not null, userID text references users(userID), subject varchar(20), question text not null, answer text, answerDate timestamp, rate varchar(2), favorite boolean, read boolean, mentorID text references users(userID), primary key(userID, askedDate));
create table subscription(userID text primary key references users(userID), token text, status varchar(10), type varchar(30));
create table log_record(logID serial unique not null, userID text references users(userID), date timestamp not null, primary key(userID, logID));
create table recommendations(recomID serial unique not null primary key, location varchar(50), subject varchar(20), spanish boolean, english boolean, type varchar(10), schoolType varchar(15), format varchar(10), groupsize varchar(7), level varchar(25), mentorID text references users(userID), active boolean);
create table recommendation_body(recomID integer unique not null primary key references recommendations(recomID), title varchar(50), multimedia text, header varchar(100), description text);
create table recommendation_target(recomID integer unique not null primary key references recommendations(recomID), startegies boolean, material boolean, timeManagement boolean, tech boolean, instructions boolean);
create table recommendation_req(recomID integer unique not null primary key references recommendations(recomID), moodle boolean, googleClassroom boolean, emails boolean, books boolean, applications boolean, socialMedia boolean, projector boolean, computer boolean, tablet  boolean, stylus  boolean, internet boolean, smartboard boolean, smartpencil boolean, speakers boolean);
create table recommendation_topics(recomID integer unique not null primary key references recommendations(recomID), topicA varchar(20), topicB varchar(20), topicC varchar(20));
create table edu_recommendations(recomID integer not null references recommendations(recomID), userID text references users(userID), date timestamp, rate varchar(2), favorite boolean, read boolean, primary key(recomID, userID));
create table quiz_question(quizQuestionID serial unique not null primary key, question varchar(500), recomID integer references recommendations(recomID));
create table quiz_question_choice(choiceID serial unique not null, quizQuestionID integer references quiz_question(quizQuestionID), choice varchar(300), correctAnswer boolean not null, primary key(choiceID, quizQuestionID));
create table quiz(quizID serial unique not null, userID text references users(userID) not null,count smallint, score smallint, created timestamp, primary key(quizID, userID));
create table quiz_qs(quizID integer references quiz(quizID) not null, choiceID integer references quiz_question_choice(choiceID), quizQuestionID integer references quiz_question(quizQuestionID) not null, primary key(quizID, quizQuestionID));